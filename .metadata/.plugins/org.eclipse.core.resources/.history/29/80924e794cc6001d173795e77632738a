package com.edlog.api.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import com.edlog.api.domain.Client;
import com.edlog.api.exception.ErrorResponse;
import com.edlog.api.service.ClientService;

@RestController
@RequestMapping("/clients")
public class ClientController {

	@Autowired
	private ClientService clientService;

	@GetMapping
	public List<Client> list() {
		return clientService.read();

	}

	@GetMapping("/{id}")
	public ResponseEntity<Client> readById(@PathVariable Long id) {
		return clientService.readById(id);
	}

	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	@Transactional
	public Client save(@Valid @RequestBody Client client) {
		return clientService.create(client);
	}

	@PutMapping("/{id}")
	@Transactional
	public ResponseEntity<Client> update(@Valid @PathVariable Long id, @RequestBody Client client) {
		return clientService.update(id, client);
	}

	@DeleteMapping("/{id}")
	public ResponseEntity<Void> delete(@PathVariable Long id) {
		return clientService.delete(id);
	}



	

}
